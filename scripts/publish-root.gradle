ext["staging.project.id"] = ''
ext["staging.project.key"] = ''
ext["production.project.id"] = ''
ext["production.project.key"] = ''
ext["sonatypeUsername"] = ''
ext["sonatypePassword"] = ''
ext["sonatypeStagingProfileId"] = ''
ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.key"] = ''
ext["developer.id"] = ''
ext["developer.name"] = ''
ext["developer.email"] = ''

File localProperties = project.rootProject.file('local.properties')
if (localProperties.exists()) {
    Properties p = new Properties()
    new FileInputStream(localProperties).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    ext["production.project.id"] = System.getenv('TEST_PROJECT_ID')
    ext["production.project.key"] = System.getenv('TEST_PROJECT_KEY')
    ext["sonatypeUsername"] = System.getenv('SONATYPE_USERNAME')
    ext["sonatypePassword"] = System.getenv('SONATYPE_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.key"] = System.getenv('SIGNING_KEY')
    ext["developer.id"] = System.getenv('DEVELOPER_ID')
    ext["developer.name"] = System.getenv('DEVELOPER_NAME')
    ext["developer.email"] = System.getenv('DEVELOPER_EMAIL')
}

nexusPublishing {
    repositories {
        sonatype {
            username = sonatypeUsername
            password = sonatypePassword
            stagingProfileId = sonatypeStagingProfileId
            version = publishVersion
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
        }
    }
}
