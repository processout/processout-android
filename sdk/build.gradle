plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.processout.sdk'
    compileSdk rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion

        setVersion(it)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    flavorDimensions 'environment'
    productFlavors {
        prod {
            dimension 'environment'
        }
        staging {
            dimension 'environment'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                testLogging {
                    events "PASSED", "SKIPPED", "FAILED"
                }
            }
        }
    }
}

def setVersion(buildType) {
    def version = file('../version.resolved').getText()
    buildType.buildConfigField("String", "LIBRARY_VERSION", "\"$version\"")
}

dependencies {
    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"

    implementation "com.google.android.material:material:$materialVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.okio:okio:$okioVersion"

    ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test:core-ktx:$androidTestCoreKtxVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidTestJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidTestEspressoVersion"
}
