plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp'
}

ext {
    publishArtifactId = 'processout-android'
    publishDescription = 'ProcessOut Android SDK'
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

android {
    namespace 'com.processout.sdk'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        setBuildConfig(it)
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ['environment']
    productFlavors {
        production {
            dimension 'environment'
        }
        staging {
            dimension 'environment'
        }
    }

    variantFilter { variant ->
        if (variant.getName() == "stagingRelease") {
            setIgnore(true)
        }
    }

    libraryVariants.all { variant ->
        if (variant.getName() == "productionDebug") {
            def projectId = rootProject.ext["production.project.id"]
            def projectKey = rootProject.ext["production.project.key"]
            variant.buildConfigField("String", "PROJECT_ID", "\"$projectId\"")
            variant.buildConfigField("String", "PROJECT_KEY", "\"$projectKey\"")
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += '-opt-in=com.processout.sdk.core.annotation.ProcessOutInternalApi'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                testLogging {
                    events "PASSED", "SKIPPED", "FAILED"
                }
            }
        }
    }

    publishing {
        singleVariant("productionRelease") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

@SuppressWarnings('GrMethodMayBeStatic')
def setBuildConfig(buildType) {
    buildType.buildConfigField("String", "LIBRARY_NAME", "\"ProcessOut Android SDK\"")
    buildType.buildConfigField("String", "LIBRARY_VERSION", "\"$publishVersion\"")
}

dependencies {
    api "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    api "androidx.core:core-ktx:$androidxCoreVersion"
    api "androidx.activity:activity-ktx:$androidxActivityVersion"
    api "androidx.fragment:fragment-ktx:$androidxFragmentVersion"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$androidxLifecycleVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"
    implementation "androidx.browser:browser:$androidxBrowserVersion"

    api "com.google.android.material:material:$materialVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.okio:okio:$okioVersion"
    implementation "io.coil-kt:coil:$coilVersion"
    implementation "org.commonmark:commonmark:$commonMarkVersion"

    ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test:core-ktx:$androidxTestCoreVersion"

    // Legacy
    dokkaPlugin "org.jetbrains.dokka:android-documentation-plugin:$dokkaVersion"
    implementation "com.android.volley:volley:$volleyVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
}
