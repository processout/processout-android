plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.processout.sdk.ui'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        setBuildConfig(it)
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ['environment']
    productFlavors {
        production {
            dimension 'environment'
        }
        staging {
            dimension 'environment'
        }
    }

    variantFilter { variant ->
        if (variant.getName() == "stagingRelease") {
            setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += '-opt-in=com.processout.sdk.core.annotation.ProcessOutInternalApi'
        freeCompilerArgs += '-opt-in=com.processout.sdk.ui.core.annotation.ProcessOutInternalApi'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = rootProject.ext.androidxComposeCompilerVersion
    }
}

@SuppressWarnings('GrMethodMayBeStatic')
def setBuildConfig(buildType) {
    buildType.buildConfigField("String", "LIBRARY_NAME", "\"ProcessOut Android SDK - UI\"")
    buildType.buildConfigField("String", "LIBRARY_VERSION", "\"$publishVersion\"")
}

dependencies {
    api project(path: ':sdk')
    api project(path: ':ui-core')
}
