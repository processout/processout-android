import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'com.processout.example'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.processout.example"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode generateVersionCode()
        versionName rootProject.ext.publishVersion
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            getIsDefault().set(true)
            applicationIdSuffix ".debug"
        }
    }

    flavorDimensions = ['environment']
    productFlavors {
        production {
            dimension 'environment'
            setBuildConfig(it, rootProject.ext["production.project.id"], rootProject.ext["production.project.key"])
        }
        staging {
            getIsDefault().set(true)
            dimension 'environment'
            applicationIdSuffix ".staging"
            setBuildConfig(it, rootProject.ext["staging.project.id"], rootProject.ext["staging.project.key"])
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

kotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_17)
        optIn.add("com.processout.sdk.core.annotation.ProcessOutInternalApi")
        optIn.add("com.processout.sdk.ui.core.annotation.ProcessOutInternalApi")
        optIn.add("com.processout.sdk.netcetera.threeds.core.annotation.ProcessOutInternalApi")
    }
}

static def generateVersionCode() {
    def commitsCount = "git rev-list --first-parent --count HEAD".execute().text.trim()
    if (commitsCount.empty) throw new RuntimeException("Could not generate version code.")
    return commitsCount.toInteger()
}

@SuppressWarnings('GrMethodMayBeStatic')
def setBuildConfig(buildType, String projectId, String projectKey) {
    buildType.buildConfigField("String", "PROJECT_ID", "\"$projectId\"")
    buildType.buildConfigField("String", "PROJECT_KEY", "\"$projectKey\"")
}

dependencies {
    implementation project(path: ':sdk')
    implementation project(path: ':ui')
    implementation project(path: ':checkout-3ds')

    implementation "com.adyen.threeds:adyen-3ds2:$adyen3dsSdkVersion"

    implementation "androidx.core:core-ktx:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraintLayoutVersion"
    implementation "androidx.activity:activity-ktx:$androidxActivityVersion"
    implementation "androidx.fragment:fragment-ktx:$androidxFragmentVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidxNavigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$androidxNavigationVersion"
    implementation "androidx.recyclerview:recyclerview:$androidxRecyclerViewVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$androidxSwipeRefreshLayoutVersion"

    implementation "com.google.android.material:material:$materialVersion"
}
